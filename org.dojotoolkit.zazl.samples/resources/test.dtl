<html>
    <head>
        <title>DTL example</title>
        <style type="text/css">
            @import "{{contextRoot}}/dojo/resources/dojo.css";
            
            #summary {
            	border-bottom:1px solid black;
            	width: 40%;
            }
        </style>
        <link type="text/css" rel="stylesheet" href="{{contextRoot}}/css/styles.css">
        <link id="themeStyles" rel="stylesheet" href="{{contextRoot}}/dijit/themes/tundra/tundra.css">

        <script type="text/javascript" src="{{contextRoot}}/dojo/dojo.js"
                djConfig="isDebug: false, parseOnLoad: true"></script>
        <script type="text/javascript" src="{{contextRoot}}/dijit/dijit.js"></script>
        <script type="text/javascript">
            dojo.require("dijit._Calendar");
        </script>
    </head>
    <body class="tundra">
    	<div id="summary">
    		<br/>
    		<strong>Summary</strong>
	    	<p>
	    		This example is used to display the basic functionality of the server and the DTL template system.
	    		
	    		We show that dojo is included into the server by default and can be easily referenced by the requested pages.
	    		
	    		The list of headers on this page were created from a Django Template for-loop, which was parsed and created on the server.  
	    	</p>
	    </div>
	    <br/>
    
        <div dojoType="dijit._Calendar"></div>
        
        <ul>
	        <li> requestMethod : {{ request.requestMethod }}</li>
			<li> urlPath : {{ request.urlPath }}</li>
	    	<li> pathInfo : {{ request.pathInfo }}</li>
	    	<li> queryString : {{ request.queryString }}</li>
	    	<li> contentType : {{ request.contentType }}</li>
	    	<li> contentLength : {{ request.contentLength }}</li>
	    	<li> serverName : {{ request.serverName }}</li>
	    	<li> serverPort : {{ request.serverPort }}</li>
	    	<li> serverProtocol : {{ request.serverProtocol }}</li>
			<li> gatewayInterface : {{ request.gatewayInterface }}</li>
			<li> serverSoftware : {{ request.serverSoftware }}</li>
			<li> pathTranslated : {{ request.pathTranslated }}</li>
			<li> remoteHost : {{ request.remoteHost }}</li>
			<li> remoteAddr : {{ request.remoteAddr }}</li>
			<li> remoteUser : {{ request.remoteUser }}</li>
			<li> authType : {{ request.authType }}</li>
            
		    <br/>
		    
            {% for header in request.headers %}
                <li>{{ header.name }} : {{ header.value }}</li>
            {% endfor %}
            
        </ul>
    </body>
</html>
